# Generated by Django 5.1.1 on 2024-11-18 17:22

import bookshop.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Authors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, null=True, verbose_name='Имя')),
                ('b_day', models.DateField(null=True, verbose_name='Дата рождения')),
                ('info', models.TextField(null=True, verbose_name='Дополнительная информация')),
                ('status', models.CharField(choices=[('active', 'Активен'), ('request', 'Заявка'), ('rejected', 'Отклонен'), ('blocked', 'Заблокирован')], default='request', verbose_name='Статус')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Причина отказа')),
            ],
            options={
                'verbose_name': 'Автор',
                'verbose_name_plural': 'Список авторов',
            },
        ),
        migrations.CreateModel(
            name='Companies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, null=True, verbose_name='Название')),
                ('status', models.CharField(choices=[('self-publishing', 'Самиздат'), ('publishing house', 'Издательство')], default='self-publishing', verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
            },
        ),
        migrations.CreateModel(
            name='Genres',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, null=True, verbose_name='Имя')),
            ],
            options={
                'verbose_name': 'Жанр или тег',
                'verbose_name_plural': 'Жанры и теги',
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, null=True, verbose_name='Имя')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='AuthorBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.DecimalField(decimal_places=0, default=0.0, max_digits=2, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookshop.authors')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='e-mail')),
                ('name', models.CharField(blank=True, max_length=80, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='Имя')),
                ('is_active', models.BooleanField(default=False, verbose_name='Аккаунт активирован')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Аккаунт уполномоченного лица')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Аккаунт администратора')),
                ('chat', models.BooleanField(default=True, verbose_name='Возможность использовать комментарии')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('favorite_a', models.ManyToManyField(to='bookshop.authors')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='worker', to='bookshop.companies', verbose_name='Компания')),
                ('favorite_g', models.ManyToManyField(to='bookshop.genres')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Список пользователей',
            },
            managers=[
                ('objects', bookshop.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Название')),
                ('file', models.TextField(null=True, verbose_name='Файл с книгой')),
                ('cover', models.TextField(null=True, verbose_name='Файл с обложкой')),
                ('publication_date', models.DateField(null=True, verbose_name='Дата публикации')),
                ('content', models.TextField(null=True, verbose_name='Содержание')),
                ('price', models.DecimalField(decimal_places=0, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('1'))], verbose_name='Цена')),
                ('status', models.CharField(choices=[('released', 'Выпущена'), ('blocked', 'Заблокирована'), ('coming soon', 'Анонс'), ('request', 'Заявка'), ('rejected', 'Отклонена')], default='request', verbose_name='Статус')),
                ('age_limit', models.CharField(choices=[('zero', '0+'), ('six', '6+'), ('twelve', '12+'), ('sixteen', '16+'), ('eighteen', '18+')], default='zero', verbose_name='Возрастное ограничение')),
                ('isbn', models.CharField(null=True, verbose_name='ISBN')),
                ('bbk', models.CharField(null=True, verbose_name='ББК')),
                ('udk', models.CharField(null=True, verbose_name='УДК')),
                ('author_mark', models.CharField(null=True, verbose_name='Авторский знак')),
                ('language', models.CharField(null=True, verbose_name='Язык')),
                ('priority', models.DecimalField(decimal_places=0, max_digits=2, null=True, validators=[django.core.validators.MinValueValidator(Decimal('1')), django.core.validators.MaxValueValidator(Decimal('10'))], verbose_name='Приоритет отображения')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='Причина отказа')),
                ('authors', models.ManyToManyField(through='bookshop.AuthorBook', to='bookshop.authors')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='books', to='bookshop.companies', verbose_name='Издательство')),
                ('genres', models.ManyToManyField(to='bookshop.genres')),
            ],
            options={
                'verbose_name': 'Книга',
                'verbose_name_plural': 'Список книг',
            },
        ),
        migrations.AddField(
            model_name='authorbook',
            name='book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookshop.books'),
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(blank=True, decimal_places=0, max_digits=2, null=True, validators=[django.core.validators.MinValueValidator(Decimal('1')), django.core.validators.MaxValueValidator(Decimal('5'))], verbose_name='Оценка')),
                ('date_time', models.DateTimeField(auto_now=True, verbose_name='Время публикации')),
                ('type', models.CharField(choices=[('feedback', 'Отзыв'), ('complaint', 'Жалоба')], default='feedback', verbose_name='Тип')),
                ('text', models.TextField(null=True, verbose_name='Текст')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='response', to='bookshop.comments', verbose_name='Ответ на')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Отзыв или жалоба',
                'verbose_name_plural': 'Отзывы и жалобы',
            },
        ),
        migrations.CreateModel(
            name='ConfirmEmailKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, null=True, verbose_name='Ключ подтверждения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='key', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ключ подтверждения',
                'verbose_name_plural': 'Ключи подтверждения',
            },
        ),
        migrations.AddField(
            model_name='genres',
            name='groups',
            field=models.ManyToManyField(related_name='genres', to='bookshop.groups'),
        ),
        migrations.CreateModel(
            name='Purchases',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(auto_now=True, verbose_name='Время совершения покупки')),
                ('type', models.CharField(choices=[('pre-order', 'Предзаказ'), ('purchase', 'Покупка')], null=True, verbose_name='Тип покупки')),
                ('books', models.ManyToManyField(to='bookshop.books', verbose_name='Позиции покупки')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Покупка',
                'verbose_name_plural': 'Покупка',
            },
        ),
        migrations.CreateModel(
            name='Relations_books',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_favorite', models.BooleanField(default=False, verbose_name='Является избранной')),
                ('type', models.CharField(choices=[('basket', 'Корзина'), ('personal_library', 'Личная библиотека')], default='basket', verbose_name='Тип')),
                ('status', models.CharField(choices=[('selected', 'Выбрано'), ('not_selected', 'Не выбрано'), ('read', 'Прочитано'), ('reading', 'Читаю')], default='not_selected', verbose_name='Статус')),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rel_books', to='bookshop.books', verbose_name='Книга')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rel_books', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Связь с книгой',
                'verbose_name_plural': 'Связи с книгами',
            },
        ),
        migrations.CreateModel(
            name='Support_Messages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст сообщения')),
                ('date_time', models.DateTimeField(auto_now=True, verbose_name='Дата отправки')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Владелец чата')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to=settings.AUTH_USER_MODEL, verbose_name='Отправитель')),
            ],
            options={
                'verbose_name': 'Сообщение',
                'verbose_name_plural': 'Сообщения',
            },
        ),
        migrations.CreateModel(
            name='Comments_Authors',
            fields=[
                ('comment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='c_author', serialize=False, to='bookshop.comments')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='c_author', to='bookshop.authors', verbose_name='Отзыв на автора')),
            ],
            options={
                'verbose_name': 'Отзыв или жалоба на автора',
                'verbose_name_plural': 'Отзывы или жалобы на автора',
            },
        ),
        migrations.CreateModel(
            name='Comments_Books',
            fields=[
                ('comment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='comment_book', serialize=False, to='bookshop.comments')),
                ('book', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_book', to='bookshop.books', verbose_name='Отзыв на книгу')),
            ],
            options={
                'verbose_name': 'Отзыв или жалоба на книгу',
                'verbose_name_plural': 'Отзывы и жалобы на книги',
            },
        ),
    ]
